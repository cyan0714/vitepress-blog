import{_ as t,c as a,o as i,b1 as l}from"./chunks/framework.CBNrOPsJ.js";const o="/vitepress-blog/assets/number-type.Cjuxlxin.png",s="/vitepress-blog/assets/date-time-type.BrWv6wah.png",r="/vitepress-blog/assets/string-type.7DMqoU1H.png",B=JSON.parse('{"title":"MySQL 数据类型","description":"","frontmatter":{},"headers":[],"relativePath":"documents/database/data-type.md","filePath":"documents/database/data-type.md","lastUpdated":1686640523000}'),d={name:"documents/database/data-type.md"};function n(p,e,c,T,A,E){return i(),a("div",null,e[0]||(e[0]=[l('<h1 id="mysql-数据类型" tabindex="-1">MySQL 数据类型 <a class="header-anchor" href="#mysql-数据类型" aria-label="Permalink to &quot;MySQL 数据类型&quot;">​</a></h1><h2 id="数字类型" tabindex="-1">数字类型 <a class="header-anchor" href="#数字类型" aria-label="Permalink to &quot;数字类型&quot;">​</a></h2><ul><li>MySQL 支持所有标准 SQL 数值数据类型。</li><li>严格数值数据类型(INTEGER、SMALLINT、DECIMAL 和 NUMERIC)。</li><li>近似数值数据类型(FLOAT、REAL 和 DOUBLE PRECISION)。</li><li>关键字<code>INT</code>是<code>INTEGER</code>的同义词，关键字<code>DEC</code>是<code>DECIMAL</code>的同义词。</li><li><code>BIT</code>数据类型保存位字段值，并且支持 MyISAM、MEMORY、InnoDB 和 BDB表。</li></ul><p><img src="'+o+'" alt="number-type"></p><h2 id="日期类型" tabindex="-1">日期类型 <a class="header-anchor" href="#日期类型" aria-label="Permalink to &quot;日期类型&quot;">​</a></h2><ul><li>表示时间值的日期和时间类型为 DATE、TIME、YEAR、DATETIME 和 TIMESTAMP。</li><li>每个时间类型有一个有效值范围和一个&quot;零&quot;值，当指定不合法的MySQL不能表示的值时使用&quot;零&quot;值。</li></ul><p><img src="'+s+'" alt="date-time-type"></p><h2 id="字符串类型" tabindex="-1">字符串类型 <a class="header-anchor" href="#字符串类型" aria-label="Permalink to &quot;字符串类型&quot;">​</a></h2><p>字符串类型指CHAR、VARCHAR、BINARY、VARBINARY、BLOB、TEXT、ENUM和SET。</p><p><img src="'+r+'" alt="string-type"></p><p>注意:</p><ol><li>CHAR(n) 和 VARCHAR(n) 中括号中 n 代表字符的个数，并不代表字节个数，比如 CHAR(30) 就可以存储 30 个字符。</li><li>CHAR 和 VARCHAR 类型类似，但它们保存和检索的方式不同。它们的最大长度和是否尾部空格被保留等方面也不同。在存储或检索过程中不进行大小写转换。</li><li>BINARY 和 VARBINARY 类似于 CHAR 和 VARCHAR，不同的是它们包含二进制字符串而不要非二进制字符串。也就是说，它们包含字节字符串而不是字符字符串。这说明它们没有字符集，并且排序和比较基于列值字节的数值值。</li><li>BLOB 是一个二进制大对象，可以容纳可变数量的数据。有 4 种 BLOB 类型：TINYBLOB、BLOB、MEDIUMBLOB 和 LONGBLOB。它们区别在于可容纳存储范围不同。</li><li>有 4 种 TEXT 类型：TINYTEXT、TEXT、MEDIUMTEXT 和 LONGTEXT。对应的这 4 种 BLOB 类型，可存储的最大长度不同，可根据实际情况选择。</li></ol>',12)]))}const u=t(d,[["render",n]]);export{B as __pageData,u as default};
