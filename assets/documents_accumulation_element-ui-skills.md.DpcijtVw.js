import{_ as i,c as a,o as t,b1 as l}from"./chunks/framework.CBNrOPsJ.js";const g=JSON.parse('{"title":"ElementUI 常见问题以及技巧","description":"","frontmatter":{},"headers":[],"relativePath":"documents/accumulation/element-ui-skills.md","filePath":"documents/accumulation/element-ui-skills.md","lastUpdated":1736299604000}'),e={name:"documents/accumulation/element-ui-skills.md"};function n(h,s,p,k,d,r){return t(),a("div",null,s[0]||(s[0]=[l(`<h1 id="elementui-常见问题以及技巧" tabindex="-1">ElementUI 常见问题以及技巧 <a class="header-anchor" href="#elementui-常见问题以及技巧" aria-label="Permalink to &quot;ElementUI 常见问题以及技巧&quot;">​</a></h1><h2 id="一-在-el-table-中的插槽使用-el-input-时遇到的问题" tabindex="-1">一. 在 el-table 中的插槽使用 el-input 时遇到的问题 <a class="header-anchor" href="#一-在-el-table-中的插槽使用-el-input-时遇到的问题" aria-label="Permalink to &quot;一. 在 el-table 中的插槽使用 el-input 时遇到的问题&quot;">​</a></h2><ol><li>输入时，在控制台能看到 value 已经改变，但视图无法同步更新 可以使用 this.tableList = JSON.parse(JSON.stringify(this.tableList)) 来解决这个问题，但会出现问题2</li><li>第一次输入后，光标自动定位到末尾，令人摸不着头脑 可以使用原生 input 来代替 el-input</li></ol><h2 id="二-在-el-table-中某一行的某个属性改变了-页面无法重新渲染" tabindex="-1">二. 在 el-table 中某一行的某个属性改变了，页面无法重新渲染 <a class="header-anchor" href="#二-在-el-table-中某一行的某个属性改变了-页面无法重新渲染" aria-label="Permalink to &quot;二. 在 el-table 中某一行的某个属性改变了，页面无法重新渲染&quot;">​</a></h2><p>试了以下方法都不行</p><ol><li>this.$set()</li><li>this.$forceUpdate 解决方法：</li></ol><ul><li>给 el-table 一个 key, 改变某个属性后修改这个 key，比如可以用 Math.random() 作为新的 key</li><li>看以下代码</li></ul><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">getStatus</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(row, index) {</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">  let</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> item </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">parse</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">JSON</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">stringify</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.tableList[index]))</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  item.editable </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> row.editable</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">$set</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.tableList, index, item)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h3 id="三-父组件使用一个-el-input-封装的子组件-且通过-v-model-绑定时-input-框无法输入问题" tabindex="-1">三. 父组件使用一个 el-input 封装的子组件, 且通过 v-model 绑定时, input 框无法输入问题 <a class="header-anchor" href="#三-父组件使用一个-el-input-封装的子组件-且通过-v-model-绑定时-input-框无法输入问题" aria-label="Permalink to &quot;三. 父组件使用一个 el-input 封装的子组件, 且通过 v-model 绑定时, input 框无法输入问题&quot;">​</a></h3><p>给表单重新赋值</p><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.form </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.form}</span></span></code></pre></div><h3 id="四-如何解决表单重新赋值后-自动触发表单验证的问题" tabindex="-1">四. 如何解决表单重新赋值后, 自动触发表单验证的问题 <a class="header-anchor" href="#四-如何解决表单重新赋值后-自动触发表单验证的问题" aria-label="Permalink to &quot;四. 如何解决表单重新赋值后, 自动触发表单验证的问题&quot;">​</a></h3><div class="language-js vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">js</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.form.a </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &#39;&#39;</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">setTimeout</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  this</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">.$refs.form.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">clearValidate</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">);</span></span></code></pre></div><h3 id="五-el-table-右侧固定布局-fixed-right-错位" tabindex="-1">五. el-table 右侧固定布局 fixed=“right“ 错位 <a class="header-anchor" href="#五-el-table-右侧固定布局-fixed-right-错位" aria-label="Permalink to &quot;五. el-table 右侧固定布局 fixed=“right“ 错位&quot;">​</a></h3><div class="language-css vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">css</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">.table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ::v-deep .el-table__fixed-right {</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    height: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !important</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ::</span><span style="--shiki-light:#22863A;--shiki-dark:#85E89D;">v-deep</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> .el-table__fixed</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    height</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">100</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">%</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> !important</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div>`,15)]))}const o=i(e,[["render",n]]);export{g as __pageData,o as default};
