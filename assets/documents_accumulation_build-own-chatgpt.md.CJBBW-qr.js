import{_ as a,c as i,o as e,b1 as t}from"./chunks/framework.CBNrOPsJ.js";const c=JSON.parse('{"title":"搭建自己的 ChatGPT","description":"","frontmatter":{},"headers":[],"relativePath":"documents/accumulation/build-own-chatgpt.md","filePath":"documents/accumulation/build-own-chatgpt.md","lastUpdated":1749020412000}'),h={name:"documents/accumulation/build-own-chatgpt.md"};function n(l,s,p,k,o,d){return e(),i("div",null,s[0]||(s[0]=[t(`<h1 id="搭建自己的-chatgpt" tabindex="-1">搭建自己的 ChatGPT <a class="header-anchor" href="#搭建自己的-chatgpt" aria-label="Permalink to &quot;搭建自己的 ChatGPT&quot;">​</a></h1><h2 id="前置准备" tabindex="-1">前置准备 <a class="header-anchor" href="#前置准备" aria-label="Permalink to &quot;前置准备&quot;">​</a></h2><p>在开始搭建之前，请确保你已准备好以下资源：</p><ol><li>一台云服务器</li><li>OPENAI_API_KEY</li></ol><h2 id="环境配置-在云服务器上安装-docker-和-docker-compose" tabindex="-1">环境配置：在云服务器上安装 Docker 和 Docker Compose <a class="header-anchor" href="#环境配置-在云服务器上安装-docker-和-docker-compose" aria-label="Permalink to &quot;环境配置：在云服务器上安装 Docker 和 Docker Compose&quot;">​</a></h2><p>本教程以 CentOS7 为例进行演示。</p><h3 id="步骤一-安装-docker" tabindex="-1">步骤一：安装 Docker <a class="header-anchor" href="#步骤一-安装-docker" aria-label="Permalink to &quot;步骤一：安装 Docker&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yum</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -y</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yum-utils</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> device-mapper-persistent-data</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> lvm2</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yum-config-manager</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --add-repo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> https://download.docker.com/linux/centos/docker-ce.repo</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yum</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-ce</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker-ce-cli</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> containerd.io</span></span></code></pre></div><h3 id="步骤二-启动-docker-服务" tabindex="-1">步骤二：启动 Docker 服务 <a class="header-anchor" href="#步骤二-启动-docker-服务" aria-label="Permalink to &quot;步骤二：启动 Docker 服务&quot;">​</a></h3><p>启动 Docker，并设置开机自启：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> start</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> systemctl</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> enable</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> docker</span></span></code></pre></div><h3 id="步骤三-验证-docker-安装" tabindex="-1">步骤三：验证 Docker 安装 <a class="header-anchor" href="#步骤三-验证-docker-安装" aria-label="Permalink to &quot;步骤三：验证 Docker 安装&quot;">​</a></h3><p>验证 Docker 是否正确安装。输入以下命令，如果输出了 Docker 版本信息，则说明已经成功安装：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span></span></code></pre></div><h3 id="步骤四-安装-docker-compose" tabindex="-1">步骤四：安装 Docker Compose <a class="header-anchor" href="#步骤四-安装-docker-compose" aria-label="Permalink to &quot;步骤四：安装 Docker Compose&quot;">​</a></h3><p>首先安装 curl 工具：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yum</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> curl</span></span></code></pre></div><p>下载最新版的 Docker Compose（请根据自己需要选择对应版本）：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> curl</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -L</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;https://github.com/docker/compose/releases/download/1.29.2/docker-compose-$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uname</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -s</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)-$(</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">uname</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -m</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">)&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -o</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/bin/docker-compose</span></span></code></pre></div><p>授权给下载下来的二进制文件执行权限：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> chmod</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> +x</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> /usr/local/bin/docker-compose</span></span></code></pre></div><h3 id="步骤五-验证-docker-compose-安装" tabindex="-1">步骤五：验证 Docker Compose 安装 <a class="header-anchor" href="#步骤五-验证-docker-compose-安装" aria-label="Permalink to &quot;步骤五：验证 Docker Compose 安装&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker-compose</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> --version</span></span></code></pre></div><p>如果顺利完成以上操作，就可以开始部署了。</p><h2 id="部署方式-使用-docker-部署" tabindex="-1">部署方式：使用 Docker 部署 <a class="header-anchor" href="#部署方式-使用-docker-部署" aria-label="Permalink to &quot;部署方式：使用 Docker 部署&quot;">​</a></h2><p>执行以下命令进行部署：</p><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> pull</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> yidadaa/chatgpt-next-web</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> run</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -d</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> -p</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> 3000:3000</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> OPENAI_API_KEY=&quot;sk-xxxx&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> CODE=&quot;your-password&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">   -e</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> BASE_URL=&quot;&quot;</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> \\</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">   yidadaa/chatgpt-next-web</span></span></code></pre></div><h2 id="docker-常用命令参考" tabindex="-1">Docker 常用命令参考 <a class="header-anchor" href="#docker-常用命令参考" aria-label="Permalink to &quot;Docker 常用命令参考&quot;">​</a></h2><h3 id="查看正在运行的容器" tabindex="-1">查看正在运行的容器 <a class="header-anchor" href="#查看正在运行的容器" aria-label="Permalink to &quot;查看正在运行的容器&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> ps</span></span></code></pre></div><h3 id="杀死正在运行的容器" tabindex="-1">杀死正在运行的容器 <a class="header-anchor" href="#杀死正在运行的容器" aria-label="Permalink to &quot;杀死正在运行的容器&quot;">​</a></h3><div class="language-bash vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">docker</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> kill</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> my_container</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"> # 杀死名为 my_container 的容器</span></span></code></pre></div><h2 id="验证部署结果" tabindex="-1">验证部署结果 <a class="header-anchor" href="#验证部署结果" aria-label="Permalink to &quot;验证部署结果&quot;">​</a></h2><p>容器启动后，就可以通过浏览器访问 <code>http://&lt;server_ip&gt;:3000</code> 来使用了。</p><p>其中 <code>&lt;server_ip&gt;</code> 是你的云服务器 IP 地址。</p><h2 id="致谢" tabindex="-1">致谢 <a class="header-anchor" href="#致谢" aria-label="Permalink to &quot;致谢&quot;">​</a></h2><p>感谢开源项目 <a href="https://github.com/Yidadaa/ChatGPT-Next-Web" target="_blank" rel="noreferrer">ChatGPT-Next-Web</a>。</p>`,37)]))}const F=a(h,[["render",n]]);export{c as __pageData,F as default};
